---
title: "Session 10: Sex Linked Markers"
---

# Sex Linked Markers

*Session presenters*

![](images/Presenters10.png)

```{r setup, include=FALSE}
library(knitr)
library(formatR)
library(tidyverse)
knitr::opts_chunk$set(tidy = TRUE, tidy.opts = list(width.cutoff = 72), 
                      cache = TRUE, 
                      echo = TRUE)
```

## *Required packages*

```{r, warning=FALSE, message=FALSE}
library(dartR.base)
library(dartR.sexlinked)
```

## Dataset 1 - ZW//ZZ - The Yellow Tufted Honeyeater

![The Yellow Tufted Honeyeater](images/Yellow_Tufted_Honeyeater.jpg)

### Load data

```{r}
#data("YTH")
load('./data/YTH.rda')
YTH                   # Explore the dataset
YTH@n.loc             # Number of SNPs
length(YTH@ind.names) # Number of individuals

```

### Run `gl.filter.sexlinked`

This function identifies sex-linked and autosomal loci present in a SNP dataset (i.e., genlight object) using individuals with known sex. It identifies five types of loci: w-linked or y-linked, sex-biased, z-linked or x-linked, gametologous and autosomal.

*The genlight object must contain in gl\@other\$ind.metrics a column named "id", and a column named "sex" in which individuals with known-sex are assigned 'M' for male, or 'F' for female. The function ignores individuals that are assigned anything else or nothing at all (unknown-sex).*

![ZW/ZZ sex chromosomes](images/ZW.png)

::: callout-caution
**NOTE**

Set `ncores` to more than 1 (default) if you have more than 50,000 SNPs, since it could actually slow down the analysis with smaller datasets.
:::

```{r}
knitr::kable(head(YTH@other$ind.metrics)) # Check that ind.metrics has the necessary columns
res <- dartR.sexlinked::gl.filter.sexlinked(gl = YTH, system = "zw")
```

::: callout-note
### Exercise

![](images/task.png){#id .class width="48" height="48"}

How many males and females does the dataset contain?

How many sex-linked loci were found?
:::

Now check the output:

```{r}
res$w.linked       # Notice that it says "w-linked"
res$z.linked       # Notice that it says "z-linked"
res$gametolog
res$sex.biased
res$autosomal
knitr::kable(head(res$results.table))  # The output table
```

The output consists of a genlight object for each type of loci, plus a results table.

### Run `gl.infer.sex`

This function uses the complete output of function `gl.filter.sexlinked` (list of 6 objects) to infer the sex of all individuals in the dataset. Specifically, the function uses 3 types of sex-linked loci (W-/Y-linked, Z-/X-linked, and gametologs), assigns a preliminary genetic sex for each type of sex-linked loci available, and outputs an `agreed sex`.

```{r}
sexID <- dartR.sexlinked::gl.infer.sex(gl_sex_filtered = res, system = "zw", seed = 124)

knitr::kable(head(sexID))
```

::: callout-warning
**IMPORTANT** We created this function with the explicit intent that a human checks the evidence for the `agreed sex` that do NOT agree for all types of sex-linked loci (denoted as '\*M' or '\*F'). This human can then use their criterion to validate these assignments.
:::

::: callout-note
### Exercise

![](images/task.png){.class width="48" height="48"}

Can you find individuals for which the `agreed sex` is uncertain (i.e., has an asterisk "\*")?
:::

## Dataset 2 - XX/XY - The Leadbeater's possum

![The Leadbeater's possum](images/Leadbeaters_possum.jpg)

### Load data

```{r}
#data("LBP")
load('./data/LBP.rda')
LBP                   # Explore the dataset
LBP@n.loc             # Number of SNPs
length(LBP@ind.names) # Number of individuals
```

### Run `gl.filter.sexlinked`

This function identifies sex-linked and autosomal loci present in a SNP dataset (genlight object) using individuals with known sex. It identifies five types of loci: w-linked or y-linked, sex-biased, z-linked or x-linked, gametologous and autosomal.

*The genlight object must contain in gl\@other\$ind.metrics a column named "id", and a column named "sex" in which individuals with known-sex are assigned 'M' for male, or 'F' for female. The function ignores individuals that are assigned anything else or nothing at all (unknown-sex).*

![XX/XY sex chromosomes](images/XY.png)

```{r}
knitr::kable(head(LBP@other$ind.metrics)) # Check that ind.metrics has the necessary columns
res <- dartR.sexlinked::gl.filter.sexlinked(gl = LBP, system = "xy")
```

::: callout-note
### Exercise

![](images/task.png){.class width="48" height="48"}

How many males and females does the dataset contain?

How many sex-linked loci were found?
:::

Now check the output:

```{r}
res$y.linked      # Notice that it says "y-linked"
res$x.linked      # Notice that it says "x-linked"
res$gametolog
res$sex.biased
res$autosomal
knitr::kable(head(res$results.table))  # The output table
```

The output consists of a genlight object for each type of loci, plus a results table.

### Run `gl.infer.sex`

This function uses the output of function `gl.filter.sexlinked` (list of 6 objects) to infer the sex of all individuals in the dataset. It uses 3 types of sex-linked loci (W-/Y-linked, Z-/X-linked, and gametologs), assigns a preliminary genetic sex for each type of sex-linked loci available, and outputs an `agreed sex`.

```{r}
sexID <- dartR.sexlinked::gl.infer.sex(gl_sex_filtered = res, system = "xy", seed = 124)
knitr::kable(head(sexID))
```

What did the function mention about gametologs? How did that impact the results table? How many types of sex-linked loci were used to infer an `agreed sex`?

::: callout-note
### Exercise

![](images/task.png){.class width="48" height="48"}

Can you find individuals for which the `agreed sex` is uncertain (i.e., has an asterisk "\*")?
:::

## EXERCISE

::: callout-note
## Exercise

![](images/task.png){.class width="48" height="48"}

Imagine you are analyzing the genetic data of a population and you want to look at its genetic structure and genetic diversity. You get to work by filtering your beautiful set of SNPs. Because you are a rigorous, you want to test whether using function `gl.filter.sexlinked` to properly filter out sex-linked loci changes the results of the populations analyses. So you: (1) process your SNP dataset by applying standard filters and run analyses, and (2) process the dataset by filtering out sex-linked loci first, applying standard filters second, and then run analyses.

Choose one of the following datasets (or your own data) and report:

1.  How many sex-linked markers are present?

2.  How many individuals had a wrong sexID?

3.  Do you see any changes in your PCA/structure analyses when you filtered out sex-linked markers versus when you did not?

4.  Do you see any differences in genetic diversity and fixation indices when you filtered out sex-linked markers versus when you did not?
:::

![](images/beer.png){.class width="350" height="200"} ![](images/Eastern_Yellow_Robin.jpg){alt="The Eastern Yellow Robin" width="349"}

![](images/Bull_Shark.jpg){.class width="350" height="200"} ![](images/Blue_shark.jpg){.class width="350" height="200"}

## *Further study*

### Exercise data 1 - Your own data

::: callout-tip
## **HINT**

You can have a look at the exercise data below for inspiration.
:::

::: callout-note
### Exercise - Your own data

1.  Number of sex-linked markers?

2.  Individuals with wrong sexID?

3.  Changes in PCA before and after removing the SLM?

4.  Differences in genetic diversity and fixation indices between autosomal and SLM?
:::

### Exercise data 2 - The Eastern Yellow Robin

Data from @robledo2023

![The Eastern Yellow Robin](images/Eastern_Yellow_Robin.jpg)

#### Load data

```{r, results="hold"}
#data("EYR")
load('./data/EYR.rda')
EYR@n.loc
table(EYR@pop)
table(EYR@other$ind.metrics$pop)
table(EYR@other$ind.metrics$sex, useNA = "ifany")
```

#### 1. Number of sex-linked markers?

```{r, results="hold"}
res <- dartR.sexlinked::gl.filter.sexlinked(gl = EYR, system = "zw")
```

#### 2. Individuals with wrong sexID?

```{r, results="hold"}
sexID <- dartR.sexlinked::gl.infer.sex(gl_sex_filtered = res, system = "zw", seed = 124)
knitr::kable(head(sexID))

sum(EYR$other$ind.metrics$sex != sexID$agreed.sex, na.rm = TRUE)
```

::: callout-note
#### Exercise

![](images/task.png){.class width="48" height="48"}

Can you tell which misidentified sexes are due to uncertain genetic sex (indicated with \*)?

**HINT** Try using `grep(pattern = "\\*", x = sexID$agreed.sex)`
:::

#### Processing SNPs with two filtering regimes

##### Filtering SNPs only with standard filters (sloppy)

```{r, message=FALSE, warning=FALSE}
# Filter for read depth
dartR.base::gl.report.rdepth(EYR)  # This is the initial dataset
EYR.sloppy <- dartR.base::gl.filter.rdepth(EYR, lower = 3, upper = 11, verbose = 0)

# Filter for loci call rate
dartR.base::gl.report.callrate(EYR.sloppy, method = "loc")
EYR.sloppy <- dartR.base::gl.filter.callrate(EYR.sloppy, method = "loc",  threshold = 0.75, verbose = 0, recalc = TRUE)

# Filter for individual call rate
dartR.base::gl.report.callrate(EYR.sloppy, method = "ind")
EYR.sloppy <- dartR.base::gl.filter.callrate(EYR.sloppy, method = "ind", threshold = 0.65, verbose = 0, recalc = TRUE)

# Filter for MAC (= 3)
dartR.base::gl.report.maf(EYR.sloppy)
EYR.sloppy <- dartR.base::gl.filter.maf(EYR.sloppy, threshold = 3, verbose = 0, recalc = TRUE)
```

##### Filtering SNPs with gl.filter.sexlinked and standard filters (correct)

```{r, message=FALSE, warning=FALSE}
# Filter for sex-linked loci
correct <- dartR.sexlinked::gl.filter.sexlinked(EYR, system = "zw")  # This is the initial dataset
# We will use correct$autosomal for the next filters

# Filter for read depth
dartR.base::gl.report.rdepth(correct$autosomal)  # This is the filtered dataset
EYR.correct <- dartR.base::gl.filter.rdepth(correct$autosomal, lower = 3, upper = 11, verbose = 0)

# Filter for loci call rate
dartR.base::gl.report.callrate(EYR.correct, method = "loc")
EYR.correct <- dartR.base::gl.filter.callrate(EYR.correct, method = "loc",  threshold = 0.75, verbose = 0, recalc = TRUE)

# Filter for individual call rate
dartR.base::gl.report.callrate(EYR.correct, method = "ind")
EYR.correct <- dartR.base::gl.filter.callrate(EYR.correct, method = "ind", threshold = 0.65, verbose = 0, recalc = TRUE)

# Filter for MAC (= 3)
dartR.base::gl.report.maf(EYR.correct)
EYR.correct <- dartR.base::gl.filter.maf(EYR.correct, threshold = 3, verbose = 0, recalc = TRUE)
```

#### 3. Changes in PCA before and after removing the SLM?

##### PCA on sloppy dataset (only standard filters)

```{r, results="hold", warning=FALSE, message=FALSE}
PCA.sloppy <- dartR.base::gl.pcoa(EYR.sloppy, verbose = 0)
dartR.base::gl.pcoa.plot(PCA.sloppy, EYR.sloppy, xaxis = 1, yaxis = 2)
dartR.base::gl.pcoa.plot(PCA.sloppy, EYR.sloppy, xaxis = 2, yaxis = 3)
```

##### PCA on correct dataset (gl.filter.sexlinked and standard filters)

```{r, results="hold", warning=FALSE, message=FALSE}
PCA.correct <- dartR.base::gl.pcoa(EYR.correct, verbose = 0)
dartR.base::gl.pcoa.plot(PCA.correct, EYR.correct, xaxis = 1, yaxis = 2)
dartR.base::gl.pcoa.plot(PCA.correct, EYR.correct, xaxis = 2, yaxis = 3)
```

#### 4. Differences in genetic diversity and fixation indices between autosomal and SLM?

```{r, warning=FALSE}
# Basic stats
basic.sloppy  <- dartR.base::utils.basic.stats(EYR.sloppy)
basic.correct <- dartR.base::utils.basic.stats(EYR.correct)
basic.sloppy$overall
basic.correct$overall

# Genetic diversity per pop
divers.sloppy <- dartR.base::gl.report.diversity(EYR.sloppy, pbar = FALSE, table = FALSE, verbose = 0)
divers.correct <- dartR.base::gl.report.diversity(EYR.correct, pbar = FALSE, table = FALSE, verbose = 0)
divers.sloppy$one_H_alpha
divers.correct$one_H_alpha
divers.sloppy$one_H_beta
divers.correct$one_H_beta

# Fixation indices
dartR.base::gl.fst.pop(EYR.sloppy, verbose = 0)
dartR.base::gl.fst.pop(EYR.correct, verbose = 0)

dartR.base::gl.report.fstat(EYR.sloppy, verbose = 0)
dartR.base::gl.report.fstat(EYR.correct, verbose = 0)
```

### Exercise data 3 - Bull shark

Data from @devloodelva_rivers_2023.

![The Bull Shark](images/Bull_Shark.jpg)

#### Load data

```{r}
print(load("data/Bull_shark_DArTseq_genlight_for_sex-linked_markers.Rdata"))

data.gl@n.loc
table(data.gl@pop)
table(data.gl@other$ind.metrics$pop)
table(data.gl@other$ind.metrics$sex, useNA = "ifany")
```

#### 1. Number of sex-linked markers?

```{r, results="hold"}
res <- dartR.sexlinked::gl.filter.sexlinked(gl = data.gl, system = "xy", plots = TRUE, ncores = 1)
```

#### 2. Individuals with wrong sexID?

```{r, results="hold"}
#check if you can increase the number of cores
sexID <- dartR.sexlinked::gl.infer.sex(gl_sex_filtered = res, system = "xy", seed = 124)
knitr::kable(head(sexID))

agreed.sex <- sub(pattern = "\\*", replacement = "", x = sexID$agreed.sex) # remove asterisk
sum(data.gl$other$ind.metrics$sex != agreed.sex, na.rm = TRUE)
```

### Exercise data 4 - Blue shark

Data from @nikolic_stepping_2023.

![The Blue Shark](images/Blue_shark.jpg)

#### Load data

```{r}
print(load("data/Blue_shark_DArTseq_genlight_for_sex-linked_markers.Rdata"))

data.gl@n.loc
table(data.gl@pop)
table(data.gl@other$ind.metrics$pop)
table(data.gl@other$ind.metrics$sex, useNA = "ifany")
```

#### 1. Number of sex-linked markers?

```{r, results="hold"}
#check if you can increase the number of cores
#takes very long, you can load the results via the line below
#resbull <- dartR.sexlinked::gl.filter.sexlinked(gl = data.gl, system = "xy", plots = TRUE, ncores = 1)

resbull <- readRDS("./data/resbull.rds")
```

#### 2. Individuals with wrong sexID?

```{r, results="hold"}
#check if you can increase the number of cores
sexID <- dartR.sexlinked::gl.infer.sex(gl_sex_filtered = resbull, system = "xy", seed = 124)
knitr::kable(head(sexID))

agreed.sex <- sub(pattern = "\\*", replacement = "", x = sexID$agreed.sex) # remove asterisk
sum(data.gl$other$ind.metrics$sex != agreed.sex, na.rm = TRUE)
```
